"""
Django settings for StarEstateManagement project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import corsheaders.defaults
import rest_framework.authentication

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i%jljaoi$dh#1tdxgz43((qq-nff%ouj$mij74zfgp=d1&k#36'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# 阿里云相关信息
ACCESSKEY_ID = '你的ACCESSKEY_ID'
ACCESSKEY_SECRET = '你的ACCESSKEY_SECRET'
OSS_HTTPS_URL = 'https://www.zhaoyixuan.cn/'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'channels',
    'django_filters',
    'star_api',
    'star_db',
    # 接口文档
    'drf_yasg2'
]

# 使用自定义用户信息模型类
AUTH_USER_MODEL = "star_db.User"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 跨域访问
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
REST_FRAMEWORK = {
    # 用户认证类
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        # token+redis认证
        'utils.user_auth.UserTokenAuthentication'
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'utils.response_render.CustomRenderer',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}
ROOT_URLCONF = 'StarEstateManagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')]
        'DIRS': ['star_web/dist'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'StarEstateManagement.wsgi.application'

# 指定ASGI路由地址
ASGI_APPLICATION = 'StarEstateManagement.asgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


# MySQL数据库配置项
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'star_estate_management',
        'USER': 'mysql账号',
        'PASSWORD': 'mysql密码',
        'HOST': '127.0.0.1',
        'PORT': 3306
    }
}

# 缓存配置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://用户名:密码@redis服务器ip:6379',
        'TIMEOUT': 500,
        'OPTIONS': {
            'parser_class': 'redis.connection.HiredisParser',
            'pool_class': 'redis.ConnectionPool',
        }
    }
}

REDIS_TIMEOUT = 7 * 24 * 60 * 60
CUBES_REDIS_TIMEOUT = 60 * 60
NEVER_REDIS_TIMEOUT = 365 * 24 * 60 * 60
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

CORS_ALLOW_CREDENTIALS = True  # 允许Cookie包含在跨站点HTTP请求中，默认为false
CORS_ALLOW_ALL_ORIGINS = False  # 允许所有的访问，白名单不会被使用，默认为false
CORS_ALLOWED_ORIGINS = ['http://127.0.0.1:8080']  # 允许发送http请求的域名，通常是部署Vue服务器域名
CORS_ALLOW_METHODS = list(corsheaders.defaults.default_methods)  # 允许访问的方法
CORS_ALLOW_HEADERS = list(corsheaders.defaults.default_headers)+['content-disposition']  # 允许的header

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'star_web/dist/static'), ]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
